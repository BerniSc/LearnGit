#Install starting Applications
sudo apt-get update
#VS
snap install code --classic
	#install MakeFile tools and configure InteliSense
	#Ctrl+shift+p in vs and c_cpp_properties.json -> add includepath "/usr/include/**" to include Paths and add comma before -> include libs from folder opencv2
#GIT
sudo apt-get install git
git --version
#OPENCV
sudo apt-get install libopencv-dev python3-opencv
python3 -c "import cv2; print(cv2.__version__)"
pkg-config --modversion opencv4
pkg-config --cflags --libs
#ROS Noetic
#Installation ROS Base
sudo sh -c 'echo "deb http://packages.ros.org/ros/ubuntu $(lsb_release -sc) main" > /etc/apt/sources.list.d/ros-latest.list'
sudo apt install curl
curl -s https://raw.githubusercontent.com/ros/rosdistro/master/ros.asc | sudo apt-key add -
sudo apt-get update
sudo apt install ros-noetic-desktop-full
source /opt/ros/noetic/setup.bash
echo "source /opt/ros/noetic/setup.bash" >> ~/.bashrc
source ~/.bashrc
sudo apt install python3-rosdep python3-rosinstall python3-rosinstall-generator python3-wstool build-essential -y
sudo rosdep init
rosdep update
#Setting up Workspace Ros... Tutorial 1
#catkin build
sudo apt-get install python3-catkin-tools
printenv | grep ROS
source /opt/ros/noetic/setup.bash
mkdir -p ~/catkin_ws/src && cd ~/catkin_ws/
catkin build
source devel/setup.bash
echo $ROS_PACKAGE_PATH
#Installing and Setting up Espressif ESP-IDF
#Für verschiedene Versionen möglich -> anderer Ordnername
sudo apt-get install git wget flex bison gperf python3 python3-venv cmake ninja-build ccache libffi-dev libssl-dev dfu-util libusb-1.0-0 python3-pip -y
python3 -m pip install virtualenv
cd ~ && mkdir esp
cd esp
#hier verschiedene Versionen je nach Branch möglich
git clone --recursive https://github.com/espressif/esp-idf.git
#Erst Umgebungsvariablen setzen und dise einfügen in alias Datei
#Wenn bei Richtigen umgebungsvariablen eingefügt Versionswechsel einfach durch sourcen mit anderem Alias möglich
sudo gedit ~/.bash_alias
alias get_idf='. $HOME/esp/esp-idf/export.sh'
source ~/.bashrc
env
#Wenn Umgebungsvariablen passen
cd ~/esp/esp-idf
./install.sh esp32
get_idf
cd ~/esp && cp -r $IDF_PATH/examples/get-started/hello_world .
idf.py set-target esp32
idf.py menuconfig
idf.py build
#Install Docker
sudo apt-get update
sudo apt-get install ca-certificates curl gnupg lsb-release
sudo mkdir -p /etc/apt/keyrings
curl -fsSL https://download.docker.com/linux/ubuntu/gpg | sudo gpg --dearmor -o /etc/apt/keyrings/docker.gpg
echo "deb [arch=$(dpkg --print-architecture) signed-by=/etc/apt/keyrings/docker.gpg] https://download.docker.com/linux/ubuntu $(lsb_release -cs) stable" | sudo tee /etc/apt/sources.list.d/docker.list > /dev/null
sudo apt-get install docker-ce docker-ce-cli containerd.io docker-compose-plugin
sudo docker run hello-world
sudo groupadd docker
sudo usermod -aG docker $USER
newgrp docker
